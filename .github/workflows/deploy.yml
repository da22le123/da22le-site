name: Deploy Frontend

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install & build frontend
        run: |
          cd frontend
          npm ci
          npm run build

      - name: Cache cloudflared
        uses: actions/cache@v3
        with:
          # store the directory where we’ll put cloudflared
          path: ~/.cloudflared
          # bump this key if you ever want to force a fresh download
          key: cloudflared-${{ runner.os }}-v1

      - name: Install cloudflared (if missing)
        run: |
          mkdir -p ~/.cloudflared
          if [ ! -x ~/.cloudflared/cloudflared ]; then
            echo "Downloading cloudflared…"
            curl -L \
              https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 \
              -o ~/.cloudflared/cloudflared
            chmod +x ~/.cloudflared/cloudflared
          else
            echo "Using cached cloudflared."
          fi
          # add it to PATH
          echo "$HOME/.cloudflared" >> $GITHUB_PATH

      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Configure SSH to use Cloudflare tunnel
        run: |
          mkdir -p ~/.ssh
          cat <<EOF >> ~/.ssh/config
          Host ${{ secrets.HOST }}
            User ${{ secrets.USER }}
            ProxyCommand ~/.cloudflared/cloudflared access ssh --hostname %h
            StrictHostKeyChecking no
          EOF
          chmod 600 ~/.ssh/config

      - name: Deploy via rsync over Cloudflare tunnel
        run: |
          rsync -avz --delete \
            frontend/dist/ \
            ${{ secrets.HOST }}:/home/da22le/hosted/da22le-site-conf/dist/